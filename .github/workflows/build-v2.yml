name: Build and pack (v2)

on:
  workflow_dispatch:
  push:
    branches:
      - stable
      - dev

  pull_request:
    branches:
      - stable
      - dev

permissions:
  contents: read

env:
  # Initialize vars context by reading it from env context
  _: ${{ vars._ }}

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macOS-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: Build (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          pyinstaller -F ${{ vars.V2_PATH }}__init__.py
          move dist\__init__.exe .\

      - name: Build
        if: ${{ runner.os != 'Windows' }}
        run: |
          pyinstaller -F ${{ vars.V2_PATH }}__init__.py
          mv ./dist/__init__ ./

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: Mys_Goods_Tool-${{ runner.os }}-x86_64
          path: |
            ${{ vars.V2_PATH }}__init__*
