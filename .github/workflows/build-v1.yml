name: Build (v1)

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  # Initialize vars context by reading it from env context
  _: ${{ vars._ }}

jobs:
  build:
    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macOS-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller
          python -m pip install -r requirements.txt

      - name: Build main(Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          pyinstaller -F ${{ vars.V1_PATH }}main.py
          move dist\main.exe .\
          move ${{ vars.V1_PATH }}config.ini .\config.ini
          move ${{ vars.V1_PATH }}logs .\logs

      - name: Build main
        if: ${{ runner.os != 'Windows' }}
        run: |
          pyinstaller -F ${{ vars.V1_PATH }}main.py
          mv ./dist/main ./
          mv ${{ vars.V1_PATH }}config.ini ./config.ini
          mv ${{ vars.V1_PATH }}logs ./logs

      - name: Cleaning up main build(Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          del dist
          del *.spec
          move build build_main

      - name: Cleaning up main build
        if: ${{ runner.os != 'Windows' }}
        run: |
          rm -rf dist/ __pycache__/ build/ *.spec

      - name: Build tool(Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          pyinstaller -F ${{ vars.V1_PATH }}tool.py
          move dist\tool.exe .\

      - name: Build tool
        if: ${{ runner.os != 'Windows' }}
        run: |
          pyinstaller -F ${{ vars.V1_PATH }}tool.py
          mv ./dist/tool ./

      - name: Cleaning up tool build(Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          del dist
          del *.spec

      - name: Cleaning up tool build
        if: ${{ runner.os != 'Windows' }}
        run: |
          rm -rf dist/ __pycache__/ build/ *.spec

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: Mys_Goods_Tool-${{ runner.os }}-x86_64
          path: |
            main*
            tool*
            config.ini
            logs
