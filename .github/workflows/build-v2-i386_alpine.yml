name: Build (i386 Alpine, v2)

on:
  workflow_dispatch:
  push:
    path:
      - 'mys_goods_tool/**'
      - '.github/workflows/build-v2-i386_alpine.yml'
      - '__init__.py'
      - 'Mys_Goods_Tool.spec'
      - 'pyproject.toml'

  pull_request:
    path:
      - 'mys_goods_tool/**'
      - '.github/workflows/build-v2-i386_alpine.yml'
      - '__init__.py'
      - 'Mys_Goods_Tool.spec'
      - 'pyproject.toml'

permissions:
  contents: read

env:
  # Initialize vars context by reading it from env context
  _: ${{ vars._ }}
  spec-file-path: Mys_Goods_Tool.spec

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'i386'

      - name: Install i386 Alpine
        run: |
          docker run --rm --privileged i386/alpine uname -a

      - name: Install Anaconda Distribution
        run: |
          docker exec -i -t i386/alpine /bin/bash
          curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86.sh -o ./miniconda.sh
          bash ./miniconda.sh -b -p $HOME/miniconda
          eval "$($HOME/bin/conda shell.bash hook)"
          
      - name: Install dependencies
        run : |
          conda init bash
          conda create -n build python=3.11
          conda activate build
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --with pyinstaller

      - name: Build
        run: |
          poetry run pyinstaller ${{ env.spec-file-path }}

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: Mys_Goods_Tool_v2-Alpine-i386
          path: |
            dist/${{ env.executable-file-name }}*
            README.md